@prefix rdfs:     <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:      <http://www.w3.org/2001/XMLSchema#> .
@prefix vamp:     <http://www.purl.org/ontology/vamp/> .
@prefix vampex:   <http://www.purl.org/ontology/vamp/examples/> .
@prefix plugbase: <http://purl.org/ontology/vamp/qm-plugins/> .
@prefix owl:      <http://www.w3.org/2002/07/owl#> .
@prefix dc:       <http://purl.org/dc/elements/1.1/> .
@prefix af:       <http://purl.org/ontology/af/> .
@prefix foaf:     <http://xmlns.com/foaf/0.1/> .
@prefix cc:       <http://web.resource.org/cc/> .
@prefix thisplug: <http://purl.org/ontology/vamp/qm-plugins/qm-keydetector#> .
@prefix :         <> .

<>  a   vamp:PluginDescription ;
     foaf:maker          <http://www.vamp-plugins.org/> ;
     foaf:maker          <http://www.vamp-plugins.org/doap.rdf#template-generator> ;
     foaf:primaryTopic   plugbase:qm-keydetector .

plugbase:qm-keydetector a   vamp:Plugin ;
    dc:title              "Key Detector" ;
    vamp:name             "Key Detector" ;
    dc:description        "Estimate the key of the music" ;
    foaf:maker            [ foaf:name "Queen Mary, University of London"] ; # FIXME could give plugin author's URI here
    cc:license            <FIXME license for the plugin> ; 
    vamp:identifier       "qm-keydetector" ;
    vamp:vamp_API_version vamp:api_version_1 ;
    owl:versionInfo       "3" ;
    vamp:input_domain     vamp:TimeDomain ;

    vamp:parameter_descriptor   thisplug:param_tuning ;
    vamp:parameter_descriptor   thisplug:param_length ;

    vamp:output_descriptor      thisplug:output_tonic ;
    vamp:output_descriptor      thisplug:output_mode ;
    vamp:output_descriptor      thisplug:output_key ;
    vamp:output_descriptor      thisplug:output_keystrength ;
    .
thisplug:param_tuning a  vamp:ParameterDescriptor ;
    vamp:identifier     "tuning" ;
    dc:title            "Tuning Frequency" ;
    dc:format           "Hz" ;
    vamp:min_value       420 ;
    vamp:max_value       460 ;
    vamp:default_value   440 .

thisplug:param_length a  vamp:ParameterDescriptor ;
    vamp:identifier     "length" ;
    dc:title            "Window Length" ;
    dc:format           "chroma frames" ;
    vamp:min_value       1 ;
    vamp:max_value       30 ;
    vamp:default_value   10 .

thisplug:output_tonic a  vamp:DenseOutput ;
    vamp:identifier       "tonic" ;
    dc:title              "Tonic Pitch" ;
    dc:description        "Tonic of the estimated key (from C = 1 to B = 12)"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:is_quantised     "true"  ;
    vamp:unit             "" ;
    vamp:bin_count          1 ;
    vamp:bin_names          ( "");
    vamp:quantize_step        1  ;
    vamp:computes_feature_type  <FIXME feature type URI> ;
    vamp:computes_event_type    <FIXME event type URI> ;
    .
thisplug:output_mode a  vamp:DenseOutput ;
    vamp:identifier       "mode" ;
    dc:title              "Key Mode" ;
    dc:description        "Major or minor mode of the estimated key (major = 0, minor = 1)"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:is_quantised     "true"  ;
    vamp:unit             "" ;
    vamp:bin_count          1 ;
    vamp:bin_names          ( "");
    vamp:quantize_step        1  ;
    vamp:computes_feature_type  <FIXME feature type URI> ;
    vamp:computes_event_type    <FIXME event type URI> ;
    .
thisplug:output_key a  vamp:DenseOutput ;
    vamp:identifier       "key" ;
    dc:title              "Key" ;
    dc:description        "Estimated key (from C major = 1 to B major = 12 and C minor = 13 to B minor = 24)"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:is_quantised     "true"  ;
    vamp:unit             "" ;
    vamp:bin_count          1 ;
    vamp:bin_names          ( "");
    vamp:quantize_step        1  ;
    vamp:computes_feature_type  <FIXME feature type URI> ;
    vamp:computes_event_type    <FIXME event type URI> ;
    .
thisplug:output_keystrength a  vamp:DenseOutput ;
    vamp:identifier       "keystrength" ;
    dc:title              "Key Strength Plot" ;
    dc:description        "Correlation of the chroma vector with stored key profile for each major and minor key"  ;
    vamp:fixed_bin_count  "true" ;
    vamp:is_quantised     "false"  ;
    vamp:unit             "" ;
    vamp:bin_count          25 ;
    vamp:bin_names          ( "F# / Gb major" "B major" "E major" "A major" "D major" "G major" "C major" "F major" "Bb major" "Eb major" "Ab major" "Db major" " " "Eb / D# minor" "G# minor" "C# minor" "F# minor" "B minor" "E minor" "A minor" "D minor" "G minor" "C minor" "F minor" "Bb minor");
    vamp:sample_type       vamp:OneSamplePerStep ;
    vamp:computes_feature_type  <FIXME feature type URI> ;
    vamp:computes_event_type    <FIXME event type URI> ;
    .
