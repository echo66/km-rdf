The Module "audio" for SWI-Prolog

David Pastor Escuredo for the Centre for Digital Music, Queen Mary University of London.
2007-2008

1. Introduction

This module provides audio signal representations and functions to deal with them. The audio elements are represented by SWI-Prolog functors: signal(SampleRate, ListOfData), frame(SampleRate, Start, ListOfData) and timestamp(Start, Duration).

The sources of the terms are open source libraries communicating with SWI-Prolog through the foreign interface swiaudio.so. This interface provides a decode/2 predicate which decodes audio files returning a "signal term" common for every file format. These signal terms can be manipulated with predicates defined in this module and serve for communication with other modules that analyse audio information (see km-rdf general doc)

The list of file extensions supported:

.wav,
 .aif,
 .aiff,
 .mp3,
 .ogg,
 .m4a,
 .aac.

2. Install

To run this module from SWI-Prolog you need:

a) Install and compile swidata, swilib and swiaudio
b) This module is built on top of the C++/C decoding libraries (mad, fishsound, faad, sndfile, oggz) that you need to download and compile

Note that some of these libraries may not be available for MAC OS/X but should be fine for LINUX (using apt)

c) Load the module from the prompt: ?- use_module(audio).

3. Content

-C/C++ files defining the foreign predicates and the communication with the external libraries
-audio module declaration and specification

4. Bugs

a) swifaad is very likely to fail and it has not support for files with more than 2 channels yet.

For any other bug please report to david.pas@gmail.com

 


